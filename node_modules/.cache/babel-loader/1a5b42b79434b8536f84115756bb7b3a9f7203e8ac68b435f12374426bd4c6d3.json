{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\TeacherWebapp\\\\facial_attendance\\\\src\\\\component\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n//Calender/////\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst startPrediction = () => {\n  // Call your API here or perform the prediction\n};\nconst Dashboard = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  console.log(date);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Welcome to FAS! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 31\n          }, this), \" It's \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: date.toLocaleString('en-US', {\n              month: 'short',\n              day: 'numeric',\n              year: 'numeric',\n              hour: 'numeric',\n              minute: 'numeric',\n              second: 'numeric',\n              hour12: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-body\",\n        style: {\n          margin: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setDate,\n          value: date,\n          firstDayOfWeek: 0,\n          tileContent: ({\n            date,\n            view\n          }) => {\n            if (view === 'month') {\n              const day = date.getDate();\n              const month = date.getMonth();\n              const year = date.getFullYear();\n              // const data = require('../resources/hamro_patro/hamro-patro-scrapper/data/years/2080.json');\n              // const dayData = data[month-3]?.days?.[day - 17];           \n              // const event = dayData?.event;\n              // const isHoliday = dayData?.isHoliday;\n              // // const dayInEn = dayData?.dayInEn;\n              // const dayInNp = dayData?.day;\n              // const en = dayData?.en;\n              // const className = isHoliday ? 'holiday' : '';\n              return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        style: {\n          height: \"100vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startPrediction,\n          className: \"btn btn-primary btn-lg\",\n          children: \"Start Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Dashboard, \"Gqi45WOZhU2c0BLYX0HoJeiR0fk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Calendar","jsxDEV","_jsxDEV","Fragment","_Fragment","startPrediction","Dashboard","_s","date","setDate","Date","console","log","interval","setInterval","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","month","day","year","hour","minute","second","hour12","style","margin","onChange","value","firstDayOfWeek","tileContent","view","getDate","getMonth","getFullYear","height","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/TeacherWebapp/facial_attendance/src/component/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n//Calender/////\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\n\n\nconst startPrediction = () => {\n  // Call your API here or perform the prediction\n}\n\n\n\nconst Dashboard = () => {\n  const [date, setDate] = useState(new Date());\n  console.log(date)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n\n  return (\n    <>\n      <div className=\"dashboard\">\n        <div className=\"dashboard-header\">\n          <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n\n        </div>\n        <div className=\"dashboard-body\" style={{ margin: 20 }}>\n          <Calendar\n            onChange={setDate}\n            value={date}\n            firstDayOfWeek={0}\n            tileContent={({ date, view }) => {\n              if (view === 'month') {\n                const day = date.getDate();\n                const month = date.getMonth();\n                const year = date.getFullYear();\n                // const data = require('../resources/hamro_patro/hamro-patro-scrapper/data/years/2080.json');\n                // const dayData = data[month-3]?.days?.[day - 17];           \n                // const event = dayData?.event;\n                // const isHoliday = dayData?.isHoliday;\n                // // const dayInEn = dayData?.dayInEn;\n                // const dayInNp = dayData?.day;\n                // const en = dayData?.en;\n                // const className = isHoliday ? 'holiday' : '';\n                return (\n                  <div >\n                    {/* <div>{dayInEn}</div> */}\n                    {/* <div>{dayInNp}</div> */}\n                    {/* <div>{event}</div> */}\n                  </div>\n                );\n              }\n            }}\n          />  </div>\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n          <button onClick={startPrediction} className=\"btn btn-primary btn-lg\">Start Prediction</button>\n        </div>\n\n      </div>\n    </>\n  )\n}\n\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}