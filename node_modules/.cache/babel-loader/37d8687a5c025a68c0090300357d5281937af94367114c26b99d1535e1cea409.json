{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\TeacherWebapp\\\\facial_attendance\\\\src\\\\component\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n// //Calender/////\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n\n// const startPrediction = () => {\n//   fetch('http://127.0.0.1:8080/startPrediction', {\n//     method: 'POST',\n//   })\n//   .then(response => response.json())\n//   .then(data => console.log(data))\n//   .catch((error) => {\n//     console.error('Error:', error);\n//   });\n// }\n\n// const Dashboard = () => {\n//   const [date, setDate] = useState(new Date());\n//   console.log(date)\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setDate(new Date());\n//     }, 1000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   return (\n//     <>\n//       <div className=\"dashboard\">\n//         <div className=\"dashboard-header\">\n//           <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n\n//         </div>\n//         <div className=\"dashboard-body\" style={{ margin: 20 }}>\n//           <Calendar\n//             onChange={setDate}\n//             value={date}\n//             firstDayOfWeek={0}\n//             tileContent={({ date, view }) => {\n//               if (view === 'month') {\n//                 const day = date.getDate();\n//                 const month = date.getMonth();\n//                 const year = date.getFullYear();\n//                 // const data = require('../resources/hamro_patro/hamro-patro-scrapper/data/years/2080.json');\n//                 // const dayData = data[month-3]?.days?.[day - 17];           \n//                 // const event = dayData?.event;\n//                 // const isHoliday = dayData?.isHoliday;\n//                 // // const dayInEn = dayData?.dayInEn;\n//                 // const dayInNp = dayData?.day;\n//                 // const en = dayData?.en;\n//                 // const className = isHoliday ? 'holiday' : '';\n//                 return (\n//                   <div >\n//                     {/* <div>{dayInEn}</div> */}\n//                     {/* <div>{dayInNp}</div> */}\n//                     {/* <div>{event}</div> */}\n//                   </div>\n//                 );\n//               }\n//             }}\n//           />  \n\n//           <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n//           <button onClick={startPrediction} className=\"btn btn-primary btn-lg\">Start Prediction</button>\n//         </div>\n//           </div>\n\n//       </div>\n//     </>\n//   )\n// }\n\n// export default Dashboard\n\nimport React, { useEffect, useState } from 'react';\n//Calender/////\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst startPrediction = () => {\n  fetch('http://127.0.0.1:8080/startPrediction', {\n    method: 'POST'\n  }).then(response => response.json()).then(data => console.log(data)).catch(error => {\n    console.error('Error:', error);\n  });\n};\nconst seeStudentData = () => {\n  // Define what should happen when the \"See Student Data\" button is clicked\n  // For example, you might fetch the student data from your server and then display it\n};\nconst Dashboard = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  console.log(date);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Welcome to FAS! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 31\n          }, this), \" It's \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: date.toLocaleString('en-US', {\n              month: 'short',\n              day: 'numeric',\n              year: 'numeric',\n              hour: 'numeric',\n              minute: 'numeric',\n              second: 'numeric',\n              hour12: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-body\",\n        style: {\n          margin: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setDate,\n          value: date,\n          firstDayOfWeek: 0,\n          tileContent: ({\n            date,\n            view\n          }) => {/* ...existing code... */}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          style: {\n            height: \"100vh\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startPrediction,\n            className: \"btn btn-primary btn-lg\",\n            children: \"Start Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: seeStudentData,\n            className: \"btn btn-primary btn-lg\",\n            children: \"See Student Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Dashboard, \"Gqi45WOZhU2c0BLYX0HoJeiR0fk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Calendar","jsxDEV","_jsxDEV","Fragment","_Fragment","startPrediction","fetch","method","then","response","json","data","console","log","catch","error","seeStudentData","Dashboard","_s","date","setDate","Date","interval","setInterval","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","month","day","year","hour","minute","second","hour12","style","margin","onChange","value","firstDayOfWeek","tileContent","view","height","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/TeacherWebapp/facial_attendance/src/component/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\n// //Calender/////\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n\n\n\n// const startPrediction = () => {\n//   fetch('http://127.0.0.1:8080/startPrediction', {\n//     method: 'POST',\n//   })\n//   .then(response => response.json())\n//   .then(data => console.log(data))\n//   .catch((error) => {\n//     console.error('Error:', error);\n//   });\n// }\n\n\n\n\n// const Dashboard = () => {\n//   const [date, setDate] = useState(new Date());\n//   console.log(date)\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setDate(new Date());\n//     }, 1000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n\n//   return (\n//     <>\n//       <div className=\"dashboard\">\n//         <div className=\"dashboard-header\">\n//           <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n\n//         </div>\n//         <div className=\"dashboard-body\" style={{ margin: 20 }}>\n//           <Calendar\n//             onChange={setDate}\n//             value={date}\n//             firstDayOfWeek={0}\n//             tileContent={({ date, view }) => {\n//               if (view === 'month') {\n//                 const day = date.getDate();\n//                 const month = date.getMonth();\n//                 const year = date.getFullYear();\n//                 // const data = require('../resources/hamro_patro/hamro-patro-scrapper/data/years/2080.json');\n//                 // const dayData = data[month-3]?.days?.[day - 17];           \n//                 // const event = dayData?.event;\n//                 // const isHoliday = dayData?.isHoliday;\n//                 // // const dayInEn = dayData?.dayInEn;\n//                 // const dayInNp = dayData?.day;\n//                 // const en = dayData?.en;\n//                 // const className = isHoliday ? 'holiday' : '';\n//                 return (\n//                   <div >\n//                     {/* <div>{dayInEn}</div> */}\n//                     {/* <div>{dayInNp}</div> */}\n//                     {/* <div>{event}</div> */}\n//                   </div>\n//                 );\n//               }\n//             }}\n//           />  \n          \n//           <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n//           <button onClick={startPrediction} className=\"btn btn-primary btn-lg\">Start Prediction</button>\n//         </div>\n//           </div>\n\n\n//       </div>\n//     </>\n//   )\n// }\n\n// export default Dashboard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useState } from 'react'\n//Calender/////\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst startPrediction = () => {\n  fetch('http://127.0.0.1:8080/startPrediction', {\n    method: 'POST',\n  })\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch((error) => {\n    console.error('Error:', error);\n  });\n}\n\nconst seeStudentData = () => {\n  // Define what should happen when the \"See Student Data\" button is clicked\n  // For example, you might fetch the student data from your server and then display it\n}\n\nconst Dashboard = () => {\n  const [date, setDate] = useState(new Date());\n  console.log(date)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      <div className=\"dashboard\">\n        <div className=\"dashboard-header\">\n          <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n        </div>\n        <div className=\"dashboard-body\" style={{ margin: 20 }}>\n          <Calendar\n            onChange={setDate}\n            value={date}\n            firstDayOfWeek={0}\n            tileContent={({ date, view }) => {/* ...existing code... */}}\n          />  \n          \n          <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n            <button onClick={startPrediction} className=\"btn btn-primary btn-lg\">Start Prediction</button>\n            <button onClick={seeStudentData} className=\"btn btn-primary btn-lg\">See Student Data</button>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Dashboard\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}