{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\TeacherWebapp\\\\facial_attendance\\\\src\\\\component\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n// //Calender/////\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n\n// const startPrediction = () => {\n//   fetch('http://127.0.0.1:8080/startPrediction', {\n//     method: 'POST',\n//   })\n//   .then(response => response.json())\n//   .then(data => console.log(data))\n//   .catch((error) => {\n//     console.error('Error:', error);\n//   });\n// }\n\n// const Dashboard = () => {\n//   const [date, setDate] = useState(new Date());\n//   console.log(date)\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setDate(new Date());\n//     }, 1000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   return (\n//     <>\n//       <div className=\"dashboard\">\n//         <div className=\"dashboard-header\">\n//           <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n\n//         </div>\n//         <div className=\"dashboard-body\" style={{ margin: 20 }}>\n//           <Calendar\n//             onChange={setDate}\n//             value={date}\n//             firstDayOfWeek={0}\n//             tileContent={({ date, view }) => {\n//               if (view === 'month') {\n//                 const day = date.getDate();\n//                 const month = date.getMonth();\n//                 const year = date.getFullYear();\n//                 // const data = require('../resources/hamro_patro/hamro-patro-scrapper/data/years/2080.json');\n//                 // const dayData = data[month-3]?.days?.[day - 17];           \n//                 // const event = dayData?.event;\n//                 // const isHoliday = dayData?.isHoliday;\n//                 // // const dayInEn = dayData?.dayInEn;\n//                 // const dayInNp = dayData?.day;\n//                 // const en = dayData?.en;\n//                 // const className = isHoliday ? 'holiday' : '';\n//                 return (\n//                   <div >\n//                     {/* <div>{dayInEn}</div> */}\n//                     {/* <div>{dayInNp}</div> */}\n//                     {/* <div>{event}</div> */}\n//                   </div>\n//                 );\n//               }\n//             }}\n//           />  \n\n//           <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n//           <button onClick={startPrediction} className=\"btn btn-primary btn-lg\">Start Prediction</button>\n//         </div>\n//           </div>\n\n//       </div>\n//     </>\n//   )\n// }\n\n// export default Dashboard\n\nimport React, { useEffect, useState } from 'react';\n//Calender/////\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst startPrediction = () => {\n  fetch('http://127.0.0.1:8080/startPrediction', {\n    method: 'POST'\n  }).then(response => response.json()).then(data => console.log(data)).catch(error => {\n    console.error('Error:', error);\n  });\n};\n\n// const seeStudentData = async () => {\n//   try {\n//     const attendanceResponse = await fetch('http://localhost:8000/attendanceRecords');\n//     const attendanceData = await attendanceResponse.json();\n//     console.log(\"attendanceData\",attendanceData)\n\n//     const studentIds = [...new Set(attendanceData.map(record => record.student_id))];\n//     const studentDataPromises = studentIds.map(id => fetch(`http://localhost:8000/students/${id}`).then(response => response.json()));\n//     const studentsData = await Promise.all(studentDataPromises);\n\n//     console.log(\"studentsData\",studentsData)\n//     return { attendanceData, studentsData };\n//   } catch (error) {\n//     console.error('Error:', error);\n//   }\n// }\n\nconst seeStudentData = async () => {\n  try {\n    const attendanceResponse = await fetch('http://localhost:8000/attendanceRecords');\n    const attendanceData = await attendanceResponse.json();\n    console.log(\"attendanceData\", attendanceData);\n    const studentIds = [...new Set(attendanceData.map(record => record.student_id))].filter(id => id !== null);\n    console.log(\"studentIds\", studentIds);\n    const studentsData = [];\n    for (let id of studentIds) {\n      const studentResponse = await fetch(`http://localhost:8000/students/${id}`);\n      const studentData = await studentResponse.json();\n      studentsData.push(studentData);\n    }\n    console.log(\"studentsData\", studentsData);\n    console.log(\"studentsData\", studentsData);\n    return {\n      attendanceData,\n      studentsData\n    };\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\nconst Dashboard = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [studentsData, setStudentsData] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n\n  // const handleSeeStudentData = async () => {\n  //   const data = await seeStudentData();\n  //   console.log(\"studentData.length\",studentData.length)\n  //   setStudentData(data.studentData);\n  //   setAttendanceData(data.attendanceData);\n\n  // }\n\n  const handleSeeStudentData = async () => {\n    console.log(\"Inside\");\n    const data = await seeStudentData();\n    console.log(\"data.studentsData\", data.studentsData);\n    console.log(\"data.attendanceData\", data.attendanceData);\n    if (data && data.studentsData) {\n      setStudentsData(data.studentsData);\n      setAttendanceData(data.attendanceData);\n    } else {\n      console.error('Unexpected API response', data);\n    }\n  };\n\n  // console.log(date)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // return (\n  //   <>\n  //     <div className=\"dashboard\">\n  //       <div className=\"dashboard-header\">\n  //         <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n  //       </div>\n  //       <div className=\"dashboard-body\" style={{ margin: 20 }}>\n  //         <Calendar\n  //           onChange={setDate}\n  //           value={date}\n  //           firstDayOfWeek={0}\n  //           tileContent={({ date, view }) => {/* ...existing code... */ }}\n  //         />\n\n  //         <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n  //           <button onClick={startPrediction} className=\"btn btn-primary btn-lg\" style={{ marginRight: \"40px\" }}>Start Prediction</button>\n  //           <button onClick={handleSeeStudentData} className=\"btn btn-primary btn-lg\" style={{ marginLeft: \"40px\" }}>See Student Data</button>\n  //         </div>\n\n  //         {studentData && (\n  //           <h2>{studentData.student_name}</h2>\n  //         )}\n\n  //         {attendanceData.length > 0 && (\n  //           <table>\n  //             <thead>\n  //               <tr>\n  //                 {/* <th>Attendance ID</th>\n  //                 <th>Student ID</th> */}\n  //                 <th>Attendance Timestamp</th>\n  //                 <th>Attendance Status</th>\n  //               </tr>\n  //             </thead>\n  //             <tbody>\n  //               {attendanceData.map(record => (\n  //                 <tr key={record.attendance_id}>\n  //                   {/* <td>{record.attendance_id}</td>\n  //                   <td>{record.student_id}</td> */}\n  //                   <td>{new Date(record.Attendance_Timestamp).toLocaleString()}</td>\n  //                   <td>{record.attendance_status ? 'Present' : 'Absent'}</td>\n  //                 </tr>\n  //               ))}\n  //             </tbody>\n  //           </table>\n  //         )}\n  //       </div>\n  //     </div>\n  //   </>\n  // )\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Welcome to FAS! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 31\n          }, this), \" It's \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: date.toLocaleString('en-US', {\n              month: 'short',\n              day: 'numeric',\n              year: 'numeric',\n              hour: 'numeric',\n              minute: 'numeric',\n              second: 'numeric',\n              hour12: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-body\",\n        style: {\n          margin: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setDate,\n          value: date,\n          firstDayOfWeek: 0,\n          tileContent: ({\n            date,\n            view\n          }) => {/* ...existing code... */}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          style: {\n            height: \"100vh\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startPrediction,\n            className: \"btn btn-primary btn-lg\",\n            style: {\n              marginRight: \"40px\"\n            },\n            children: \"Start Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSeeStudentData,\n            className: \"btn btn-primary btn-lg\",\n            style: {\n              marginLeft: \"40px\"\n            },\n            children: \"See Student Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), studentsData.map(student => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: student.student_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), attendanceData.filter(record => record.Student_ID === student.student_id).length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Attendance Timestamp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Attendance Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: attendanceData.filter(record => record.Student_ID === student.student_id).map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(record.Attendance_Timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: record.Attendance_Status ? 'Present' : 'Absent'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 25\n                }, this)]\n              }, record.Attendance_ID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Dashboard, \"6eXCD7epe1PJhOC1Nh7NG/Su/M8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Calendar","jsxDEV","_jsxDEV","Fragment","_Fragment","startPrediction","fetch","method","then","response","json","data","console","log","catch","error","seeStudentData","attendanceResponse","attendanceData","studentIds","Set","map","record","student_id","filter","id","studentsData","studentResponse","studentData","push","Dashboard","_s","date","setDate","Date","setStudentsData","setAttendanceData","handleSeeStudentData","interval","setInterval","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","month","day","year","hour","minute","second","hour12","style","margin","onChange","value","firstDayOfWeek","tileContent","view","height","onClick","marginRight","marginLeft","student","student_name","Student_ID","length","Attendance_Timestamp","Attendance_Status","Attendance_ID","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/TeacherWebapp/facial_attendance/src/component/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\n// //Calender/////\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n\n\n\n// const startPrediction = () => {\n//   fetch('http://127.0.0.1:8080/startPrediction', {\n//     method: 'POST',\n//   })\n//   .then(response => response.json())\n//   .then(data => console.log(data))\n//   .catch((error) => {\n//     console.error('Error:', error);\n//   });\n// }\n\n\n\n\n// const Dashboard = () => {\n//   const [date, setDate] = useState(new Date());\n//   console.log(date)\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setDate(new Date());\n//     }, 1000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n\n//   return (\n//     <>\n//       <div className=\"dashboard\">\n//         <div className=\"dashboard-header\">\n//           <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n\n//         </div>\n//         <div className=\"dashboard-body\" style={{ margin: 20 }}>\n//           <Calendar\n//             onChange={setDate}\n//             value={date}\n//             firstDayOfWeek={0}\n//             tileContent={({ date, view }) => {\n//               if (view === 'month') {\n//                 const day = date.getDate();\n//                 const month = date.getMonth();\n//                 const year = date.getFullYear();\n//                 // const data = require('../resources/hamro_patro/hamro-patro-scrapper/data/years/2080.json');\n//                 // const dayData = data[month-3]?.days?.[day - 17];           \n//                 // const event = dayData?.event;\n//                 // const isHoliday = dayData?.isHoliday;\n//                 // // const dayInEn = dayData?.dayInEn;\n//                 // const dayInNp = dayData?.day;\n//                 // const en = dayData?.en;\n//                 // const className = isHoliday ? 'holiday' : '';\n//                 return (\n//                   <div >\n//                     {/* <div>{dayInEn}</div> */}\n//                     {/* <div>{dayInNp}</div> */}\n//                     {/* <div>{event}</div> */}\n//                   </div>\n//                 );\n//               }\n//             }}\n//           />  \n\n//           <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n//           <button onClick={startPrediction} className=\"btn btn-primary btn-lg\">Start Prediction</button>\n//         </div>\n//           </div>\n\n\n//       </div>\n//     </>\n//   )\n// }\n\n// export default Dashboard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useState } from 'react'\n//Calender/////\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst startPrediction = () => {\n  fetch('http://127.0.0.1:8080/startPrediction', {\n    method: 'POST',\n  })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\n\n\n// const seeStudentData = async () => {\n//   try {\n//     const attendanceResponse = await fetch('http://localhost:8000/attendanceRecords');\n//     const attendanceData = await attendanceResponse.json();\n//     console.log(\"attendanceData\",attendanceData)\n\n//     const studentIds = [...new Set(attendanceData.map(record => record.student_id))];\n//     const studentDataPromises = studentIds.map(id => fetch(`http://localhost:8000/students/${id}`).then(response => response.json()));\n//     const studentsData = await Promise.all(studentDataPromises);\n\n//     console.log(\"studentsData\",studentsData)\n//     return { attendanceData, studentsData };\n//   } catch (error) {\n//     console.error('Error:', error);\n//   }\n// }\n\n\nconst seeStudentData = async () => {\n  try {\n    const attendanceResponse = await fetch('http://localhost:8000/attendanceRecords');\n    const attendanceData = await attendanceResponse.json();\n\n    console.log(\"attendanceData\",attendanceData)\n\n    const studentIds = [...new Set(attendanceData.map(record => record.student_id))].filter(id => id !== null);\n    console.log(\"studentIds\",studentIds)\n    const studentsData = [];\n    for (let id of studentIds) {\n      const studentResponse = await fetch(`http://localhost:8000/students/${id}`);\n      const studentData = await studentResponse.json();\n      \n      studentsData.push(studentData);\n    }\n    console.log(\"studentsData\",studentsData)\n\n    console.log(\"studentsData\",studentsData)\n    return { attendanceData, studentsData };\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\n\n\n\n\n\n\nconst Dashboard = () => {\n  const [date, setDate] = useState(new Date());\n  const [studentsData, setStudentsData] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n\n\n  // const handleSeeStudentData = async () => {\n  //   const data = await seeStudentData();\n  //   console.log(\"studentData.length\",studentData.length)\n  //   setStudentData(data.studentData);\n  //   setAttendanceData(data.attendanceData);\n\n  // }\n\n  const handleSeeStudentData = async () => {\n    console.log(\"Inside\")\n    const data = await seeStudentData();\n    console.log(\"data.studentsData\",data.studentsData)\n    console.log(\"data.attendanceData\",data.attendanceData)\n\n    if (data && data.studentsData) {\n      setStudentsData(data.studentsData);\n      setAttendanceData(data.attendanceData);\n    } else {\n      console.error('Unexpected API response', data);\n    }\n  }\n\n\n  // console.log(date)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n\n  // return (\n  //   <>\n  //     <div className=\"dashboard\">\n  //       <div className=\"dashboard-header\">\n  //         <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n  //       </div>\n  //       <div className=\"dashboard-body\" style={{ margin: 20 }}>\n  //         <Calendar\n  //           onChange={setDate}\n  //           value={date}\n  //           firstDayOfWeek={0}\n  //           tileContent={({ date, view }) => {/* ...existing code... */ }}\n  //         />\n\n  //         <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n  //           <button onClick={startPrediction} className=\"btn btn-primary btn-lg\" style={{ marginRight: \"40px\" }}>Start Prediction</button>\n  //           <button onClick={handleSeeStudentData} className=\"btn btn-primary btn-lg\" style={{ marginLeft: \"40px\" }}>See Student Data</button>\n  //         </div>\n\n\n  //         {studentData && (\n  //           <h2>{studentData.student_name}</h2>\n  //         )}\n\n  //         {attendanceData.length > 0 && (\n  //           <table>\n  //             <thead>\n  //               <tr>\n  //                 {/* <th>Attendance ID</th>\n  //                 <th>Student ID</th> */}\n  //                 <th>Attendance Timestamp</th>\n  //                 <th>Attendance Status</th>\n  //               </tr>\n  //             </thead>\n  //             <tbody>\n  //               {attendanceData.map(record => (\n  //                 <tr key={record.attendance_id}>\n  //                   {/* <td>{record.attendance_id}</td>\n  //                   <td>{record.student_id}</td> */}\n  //                   <td>{new Date(record.Attendance_Timestamp).toLocaleString()}</td>\n  //                   <td>{record.attendance_status ? 'Present' : 'Absent'}</td>\n  //                 </tr>\n  //               ))}\n  //             </tbody>\n  //           </table>\n  //         )}\n  //       </div>\n  //     </div>\n  //   </>\n  // )\n\n  return (\n    <>\n      <div className=\"dashboard\">\n        <div className=\"dashboard-header\">\n          <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n        </div>\n        <div className=\"dashboard-body\" style={{ margin: 20 }}>\n          <Calendar\n            onChange={setDate}\n            value={date}\n            firstDayOfWeek={0}\n            tileContent={({ date, view }) => {/* ...existing code... */ }}\n          />\n  \n          <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n            <button onClick={startPrediction} className=\"btn btn-primary btn-lg\" style={{ marginRight: \"40px\" }}>Start Prediction</button>\n            <button onClick={handleSeeStudentData} className=\"btn btn-primary btn-lg\" style={{ marginLeft: \"40px\" }}>See Student Data</button>\n          </div>\n  \n          {studentsData.map(student => (\n            <>\n              <h2>{student.student_name}</h2>\n              {attendanceData.filter(record => record.Student_ID === student.student_id).length > 0 && (\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Attendance Timestamp</th>\n                      <th>Attendance Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {attendanceData.filter(record => record.Student_ID === student.student_id).map(record => (\n                      <tr key={record.Attendance_ID}>\n                        <td>{new Date(record.Attendance_Timestamp).toLocaleString()}</td>\n                        <td>{record.Attendance_Status ? 'Present' : 'Absent'}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              )}\n            </>\n          ))}\n        </div>\n      </div>\n    </>\n  )\n\n  \n\n}\n\nexport default Dashboard\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}