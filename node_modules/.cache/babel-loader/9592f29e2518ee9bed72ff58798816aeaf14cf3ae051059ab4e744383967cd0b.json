{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\TeacherWebapp\\\\facial_attendance\\\\src\\\\component\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n// //Calender/////\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n\n// const startPrediction = () => {\n//   fetch('http://127.0.0.1:8080/startPrediction', {\n//     method: 'POST',\n//   })\n//   .then(response => response.json())\n//   .then(data => console.log(data))\n//   .catch((error) => {\n//     console.error('Error:', error);\n//   });\n// }\n\n// const Dashboard = () => {\n//   const [date, setDate] = useState(new Date());\n//   console.log(date)\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setDate(new Date());\n//     }, 1000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   return (\n//     <>\n//       <div className=\"dashboard\">\n//         <div className=\"dashboard-header\">\n//           <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n\n//         </div>\n//         <div className=\"dashboard-body\" style={{ margin: 20 }}>\n//           <Calendar\n//             onChange={setDate}\n//             value={date}\n//             firstDayOfWeek={0}\n//             tileContent={({ date, view }) => {\n//               if (view === 'month') {\n//                 const day = date.getDate();\n//                 const month = date.getMonth();\n//                 const year = date.getFullYear();\n//                 // const data = require('../resources/hamro_patro/hamro-patro-scrapper/data/years/2080.json');\n//                 // const dayData = data[month-3]?.days?.[day - 17];           \n//                 // const event = dayData?.event;\n//                 // const isHoliday = dayData?.isHoliday;\n//                 // // const dayInEn = dayData?.dayInEn;\n//                 // const dayInNp = dayData?.day;\n//                 // const en = dayData?.en;\n//                 // const className = isHoliday ? 'holiday' : '';\n//                 return (\n//                   <div >\n//                     {/* <div>{dayInEn}</div> */}\n//                     {/* <div>{dayInNp}</div> */}\n//                     {/* <div>{event}</div> */}\n//                   </div>\n//                 );\n//               }\n//             }}\n//           />  \n\n//           <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n//           <button onClick={startPrediction} className=\"btn btn-primary btn-lg\">Start Prediction</button>\n//         </div>\n//           </div>\n\n//       </div>\n//     </>\n//   )\n// }\n\n// export default Dashboard\n\nimport React, { useEffect, useState } from 'react';\n//Calender/////\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst startPrediction = () => {\n  fetch('http://127.0.0.1:8080/startPrediction', {\n    method: 'POST'\n  }).then(response => response.json()).then(data => console.log(data)).catch(error => {\n    console.error('Error:', error);\n  });\n};\n\n// const seeStudentData = async () => {\n//   try {\n//     const attendanceResponse = await fetch('http://localhost:8000/attendanceRecords');\n//     const attendanceData = await attendanceResponse.json();\n//     console.log(\"attendanceData\",attendanceData)\n\n//     const studentIds = [...new Set(attendanceData.map(record => record.student_id))];\n//     const studentDataPromises = studentIds.map(id => fetch(`http://localhost:8000/students/${id}`).then(response => response.json()));\n//     const studentsData = await Promise.all(studentDataPromises);\n\n//     console.log(\"studentsData\",studentsData)\n//     return { attendanceData, studentsData };\n//   } catch (error) {\n//     console.error('Error:', error);\n//   }\n// }\n\nconst seeStudentData = async () => {\n  try {\n    const attendanceResponse = await fetch('http://localhost:8000/attendanceRecords');\n    const attendanceData = await attendanceResponse.json();\n    console.log(\"attendanceData\", attendanceData);\n    const studentIds = [...new Set(attendanceData.map(record => record.student_id))].filter(id => id !== null);\n    console.log(\"studentIds\", studentIds);\n    const studentsData = [];\n    for (let id of studentIds) {\n      const studentResponse = await fetch(`http://localhost:8000/students/${id}`);\n      const studentData = await studentResponse.json();\n      studentsData.push(studentData);\n    }\n    console.log(\"studentsData\", studentsData);\n    console.log(\"studentsData\", studentsData);\n    return {\n      attendanceData,\n      studentsData\n    };\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\nconst Dashboard = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [studentsData, setStudentsData] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n\n  // const handleSeeStudentData = async () => {\n  //   const data = await seeStudentData();\n  //   console.log(\"studentData.length\",studentData.length)\n  //   setStudentData(data.studentData);\n  //   setAttendanceData(data.attendanceData);\n\n  // }\n\n  const handleSeeStudentData = async () => {\n    console.log(\"Inside\");\n    const data = await seeStudentData();\n    console.log(\"data.studentsData\", data.studentsData);\n    console.log(\"data.attendanceData\", data.attendanceData);\n    if (data && data.studentsData) {\n      setStudentsData(data.studentsData);\n      setAttendanceData(data.attendanceData);\n    } else {\n      console.error('Unexpected API response', data);\n    }\n  };\n\n  // console.log(date)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // return (\n  //   <>\n  //     <div className=\"dashboard\">\n  //       <div className=\"dashboard-header\">\n  //         <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n  //       </div>\n  //       <div className=\"dashboard-body\" style={{ margin: 20 }}>\n  //         <Calendar\n  //           onChange={setDate}\n  //           value={date}\n  //           firstDayOfWeek={0}\n  //           tileContent={({ date, view }) => {/* ...existing code... */ }}\n  //         />\n\n  //         <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n  //           <button onClick={startPrediction} className=\"btn btn-primary btn-lg\" style={{ marginRight: \"40px\" }}>Start Prediction</button>\n  //           <button onClick={handleSeeStudentData} className=\"btn btn-primary btn-lg\" style={{ marginLeft: \"40px\" }}>See Student Data</button>\n  //         </div>\n\n  //         {studentData && (\n  //           <h2>{studentData.student_name}</h2>\n  //         )}\n\n  //         {attendanceData.length > 0 && (\n  //           <table>\n  //             <thead>\n  //               <tr>\n  //                 {/* <th>Attendance ID</th>\n  //                 <th>Student ID</th> */}\n  //                 <th>Attendance Timestamp</th>\n  //                 <th>Attendance Status</th>\n  //               </tr>\n  //             </thead>\n  //             <tbody>\n  //               {attendanceData.map(record => (\n  //                 <tr key={record.attendance_id}>\n  //                   {/* <td>{record.attendance_id}</td>\n  //                   <td>{record.student_id}</td> */}\n  //                   <td>{new Date(record.Attendance_Timestamp).toLocaleString()}</td>\n  //                   <td>{record.attendance_status ? 'Present' : 'Absent'}</td>\n  //                 </tr>\n  //               ))}\n  //             </tbody>\n  //           </table>\n  //         )}\n  //       </div>\n  //     </div>\n  //   </>\n  // )\n\n  //   return (\n  //     <>\n  //       <div className=\"dashboard\">\n  //         <div className=\"dashboard-header\">\n  //           <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n  //         </div>\n  //         <div className=\"dashboard-body\" style={{ margin: 20 }}>\n  //           <Calendar\n  //             onChange={setDate}\n  //             value={date}\n  //             firstDayOfWeek={0}\n  //             tileContent={({ date, view }) => {/* ...existing code... */ }}\n  //           />\n\n  //           <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n  //             <button onClick={startPrediction} className=\"btn btn-primary btn-lg\" style={{ marginRight: \"40px\" }}>Start Prediction</button>\n  //             <button onClick={handleSeeStudentData} className=\"btn btn-primary btn-lg\" style={{ marginLeft: \"40px\" }}>See Student Data</button>\n  //           </div>\n\n  //           {studentsData.map(student => (\n  //             <>\n  //               <h1 className=\"text-4xl\"> Student Name: {student.student_name}</h1>\n  //               {attendanceData.filter(record => record.student_id === student.student_id).length > 0 && (\n  //                 <table className=\"table-auto\">\n  //                   <thead>\n  //                     <tr>\n  //                       <th className=\"px-4 py-2\">Attendance Timestamp</th>\n  //                       <th className=\"px-4 py-2\">Attendance Status</th>\n  //                     </tr>\n  //                   </thead>\n  //                   <tbody>\n  //                     {attendanceData.filter(record => record.student_id === student.student_id).map(record => (\n  //                       <tr key={record.attendance_id} className=\"bg-blue-200\">\n  //                         <td className=\"border px-4 py-2\">{new Date(record.attendance_timestamp).toLocaleString()}</td>\n  //                         <td className=\"border px-4 py-2\">{record.attendance_status ? 'Present' : 'Absent'}</td>\n  //                       </tr>\n  //                     ))}\n  //                   </tbody>\n  //                 </table>\n  //               )}\n  //             </>\n  //           ))}\n  //         </div>\n  //       </div>\n  //     </>\n  //   )\n  // }\n  // export default Dashboard\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Welcome to FAS! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this), \" It's \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: date.toLocaleString('en-US', {\n              month: 'short',\n              day: 'numeric',\n              year: 'numeric',\n              hour: 'numeric',\n              minute: 'numeric',\n              second: 'numeric',\n              hour12: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-body\",\n        style: {\n          margin: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setDate,\n          value: date,\n          firstDayOfWeek: 0,\n          tileContent: ({\n            date,\n            view\n          }) => {/* ...existing code... */}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          style: {\n            height: \"100vh\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startPrediction,\n            className: \"btn btn-primary btn-lg\",\n            style: {\n              marginRight: \"40px\"\n            },\n            children: \"Start Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSeeStudentData,\n            className: \"btn btn-primary btn-lg\",\n            style: {\n              marginLeft: \"40px\"\n            },\n            children: \"See Student Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap justify-around\",\n          children: studentsData.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/2 p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-4xl\",\n              children: [\"Student Name: \", student.student_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), attendanceData.filter(record => record.student_id === student.student_id).length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-2\",\n                    children: \"Attendance Timestamp\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-2\",\n                    children: \"Attendance Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: attendanceData.filter(record => record.student_id === student.student_id).map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"bg-blue-200\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"border px-4 py-2\",\n                    children: new Date(record.attendance_timestamp).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"border px-4 py-2\",\n                    children: record.attendance_status ? 'Present' : 'Absent'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 25\n                  }, this)]\n                }, record.attendance_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Dashboard, \"6eXCD7epe1PJhOC1Nh7NG/Su/M8=\");\n_c = Dashboard;\nexport default Dashboard;\n\n//   return (\n//     <>\n//       <div className=\"dashboard\">\n//         <div className=\"dashboard-header\">\n//           <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n//         </div>\n//         <div className=\"dashboard-body\" style={{ margin: 20 }}>\n//           <Calendar\n//             onChange={setDate}\n//             value={date}\n//             firstDayOfWeek={0}\n//             tileContent={({ date, view }) => {/* ...existing code... */ }}\n//           />\n\n//           <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n//             <button onClick={startPrediction} className=\"btn btn-primary btn-lg\" style={{ marginRight: \"40px\" }}>Start Prediction</button>\n//             <button onClick={handleSeeStudentData} className=\"btn btn-primary btn-lg\" style={{ marginLeft: \"40px\" }}>See Student Data</button>\n//           </div>\n\n//           {studentsData.map(student => (\n//             <>\n//               <h2>{student.student_name}</h2>\n//               {attendanceData.filter(record => record.student_id === student.student_id).length > 0 && (\n//                 <table>\n//                   <thead>\n//                     <tr>\n//                       <th>Attendance Timestamp</th>\n//                       <th>Attendance Status</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {attendanceData.filter(record => record.student_id === student.student_id).map(record => (\n//                       <tr key={record.attendance_id}>\n//                         <td>{new Date(record.attendance_timestamp).toLocaleString()}</td>\n//                         <td>{record.attendance_status ? 'Present' : 'Absent'}</td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                 </table>\n//               )}\n//             </>\n//           ))}\n//         </div>\n//       </div>\n//     </>\n//   )\n\n// }\n\n// export default Dashboard\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Calendar","jsxDEV","_jsxDEV","Fragment","_Fragment","startPrediction","fetch","method","then","response","json","data","console","log","catch","error","seeStudentData","attendanceResponse","attendanceData","studentIds","Set","map","record","student_id","filter","id","studentsData","studentResponse","studentData","push","Dashboard","_s","date","setDate","Date","setStudentsData","setAttendanceData","handleSeeStudentData","interval","setInterval","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","month","day","year","hour","minute","second","hour12","style","margin","onChange","value","firstDayOfWeek","tileContent","view","height","onClick","marginRight","marginLeft","student","student_name","length","attendance_timestamp","attendance_status","attendance_id","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/TeacherWebapp/facial_attendance/src/component/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\n// //Calender/////\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n\n\n\n// const startPrediction = () => {\n//   fetch('http://127.0.0.1:8080/startPrediction', {\n//     method: 'POST',\n//   })\n//   .then(response => response.json())\n//   .then(data => console.log(data))\n//   .catch((error) => {\n//     console.error('Error:', error);\n//   });\n// }\n\n\n\n\n// const Dashboard = () => {\n//   const [date, setDate] = useState(new Date());\n//   console.log(date)\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setDate(new Date());\n//     }, 1000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n\n//   return (\n//     <>\n//       <div className=\"dashboard\">\n//         <div className=\"dashboard-header\">\n//           <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n\n//         </div>\n//         <div className=\"dashboard-body\" style={{ margin: 20 }}>\n//           <Calendar\n//             onChange={setDate}\n//             value={date}\n//             firstDayOfWeek={0}\n//             tileContent={({ date, view }) => {\n//               if (view === 'month') {\n//                 const day = date.getDate();\n//                 const month = date.getMonth();\n//                 const year = date.getFullYear();\n//                 // const data = require('../resources/hamro_patro/hamro-patro-scrapper/data/years/2080.json');\n//                 // const dayData = data[month-3]?.days?.[day - 17];           \n//                 // const event = dayData?.event;\n//                 // const isHoliday = dayData?.isHoliday;\n//                 // // const dayInEn = dayData?.dayInEn;\n//                 // const dayInNp = dayData?.day;\n//                 // const en = dayData?.en;\n//                 // const className = isHoliday ? 'holiday' : '';\n//                 return (\n//                   <div >\n//                     {/* <div>{dayInEn}</div> */}\n//                     {/* <div>{dayInNp}</div> */}\n//                     {/* <div>{event}</div> */}\n//                   </div>\n//                 );\n//               }\n//             }}\n//           />  \n\n//           <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n//           <button onClick={startPrediction} className=\"btn btn-primary btn-lg\">Start Prediction</button>\n//         </div>\n//           </div>\n\n\n//       </div>\n//     </>\n//   )\n// }\n\n// export default Dashboard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useState } from 'react'\n//Calender/////\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst startPrediction = () => {\n  fetch('http://127.0.0.1:8080/startPrediction', {\n    method: 'POST',\n  })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n\n\n\n// const seeStudentData = async () => {\n//   try {\n//     const attendanceResponse = await fetch('http://localhost:8000/attendanceRecords');\n//     const attendanceData = await attendanceResponse.json();\n//     console.log(\"attendanceData\",attendanceData)\n\n//     const studentIds = [...new Set(attendanceData.map(record => record.student_id))];\n//     const studentDataPromises = studentIds.map(id => fetch(`http://localhost:8000/students/${id}`).then(response => response.json()));\n//     const studentsData = await Promise.all(studentDataPromises);\n\n//     console.log(\"studentsData\",studentsData)\n//     return { attendanceData, studentsData };\n//   } catch (error) {\n//     console.error('Error:', error);\n//   }\n// }\n\n\nconst seeStudentData = async () => {\n  try {\n    const attendanceResponse = await fetch('http://localhost:8000/attendanceRecords');\n    const attendanceData = await attendanceResponse.json();\n\n    console.log(\"attendanceData\",attendanceData)\n\n    const studentIds = [...new Set(attendanceData.map(record => record.student_id))].filter(id => id !== null);\n    console.log(\"studentIds\",studentIds)\n    const studentsData = [];\n    for (let id of studentIds) {\n      const studentResponse = await fetch(`http://localhost:8000/students/${id}`);\n      const studentData = await studentResponse.json();\n      \n      studentsData.push(studentData);\n    }\n    console.log(\"studentsData\",studentsData)\n\n    console.log(\"studentsData\",studentsData)\n    return { attendanceData, studentsData };\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\n\n\n\n\n\n\nconst Dashboard = () => {\n  const [date, setDate] = useState(new Date());\n  const [studentsData, setStudentsData] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n\n\n  // const handleSeeStudentData = async () => {\n  //   const data = await seeStudentData();\n  //   console.log(\"studentData.length\",studentData.length)\n  //   setStudentData(data.studentData);\n  //   setAttendanceData(data.attendanceData);\n\n  // }\n\n  const handleSeeStudentData = async () => {\n    console.log(\"Inside\")\n    const data = await seeStudentData();\n    console.log(\"data.studentsData\",data.studentsData)\n    console.log(\"data.attendanceData\",data.attendanceData)\n\n    if (data && data.studentsData) {\n      setStudentsData(data.studentsData);\n      setAttendanceData(data.attendanceData);\n    } else {\n      console.error('Unexpected API response', data);\n    }\n  }\n\n\n  // console.log(date)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n\n  // return (\n  //   <>\n  //     <div className=\"dashboard\">\n  //       <div className=\"dashboard-header\">\n  //         <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n  //       </div>\n  //       <div className=\"dashboard-body\" style={{ margin: 20 }}>\n  //         <Calendar\n  //           onChange={setDate}\n  //           value={date}\n  //           firstDayOfWeek={0}\n  //           tileContent={({ date, view }) => {/* ...existing code... */ }}\n  //         />\n\n  //         <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n  //           <button onClick={startPrediction} className=\"btn btn-primary btn-lg\" style={{ marginRight: \"40px\" }}>Start Prediction</button>\n  //           <button onClick={handleSeeStudentData} className=\"btn btn-primary btn-lg\" style={{ marginLeft: \"40px\" }}>See Student Data</button>\n  //         </div>\n\n\n  //         {studentData && (\n  //           <h2>{studentData.student_name}</h2>\n  //         )}\n\n  //         {attendanceData.length > 0 && (\n  //           <table>\n  //             <thead>\n  //               <tr>\n  //                 {/* <th>Attendance ID</th>\n  //                 <th>Student ID</th> */}\n  //                 <th>Attendance Timestamp</th>\n  //                 <th>Attendance Status</th>\n  //               </tr>\n  //             </thead>\n  //             <tbody>\n  //               {attendanceData.map(record => (\n  //                 <tr key={record.attendance_id}>\n  //                   {/* <td>{record.attendance_id}</td>\n  //                   <td>{record.student_id}</td> */}\n  //                   <td>{new Date(record.Attendance_Timestamp).toLocaleString()}</td>\n  //                   <td>{record.attendance_status ? 'Present' : 'Absent'}</td>\n  //                 </tr>\n  //               ))}\n  //             </tbody>\n  //           </table>\n  //         )}\n  //       </div>\n  //     </div>\n  //   </>\n  // )\n\n\n\n\n//   return (\n//     <>\n//       <div className=\"dashboard\">\n//         <div className=\"dashboard-header\">\n//           <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n//         </div>\n//         <div className=\"dashboard-body\" style={{ margin: 20 }}>\n//           <Calendar\n//             onChange={setDate}\n//             value={date}\n//             firstDayOfWeek={0}\n//             tileContent={({ date, view }) => {/* ...existing code... */ }}\n//           />\n  \n//           <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n//             <button onClick={startPrediction} className=\"btn btn-primary btn-lg\" style={{ marginRight: \"40px\" }}>Start Prediction</button>\n//             <button onClick={handleSeeStudentData} className=\"btn btn-primary btn-lg\" style={{ marginLeft: \"40px\" }}>See Student Data</button>\n//           </div>\n  \n//           {studentsData.map(student => (\n//             <>\n//               <h1 className=\"text-4xl\"> Student Name: {student.student_name}</h1>\n//               {attendanceData.filter(record => record.student_id === student.student_id).length > 0 && (\n//                 <table className=\"table-auto\">\n//                   <thead>\n//                     <tr>\n//                       <th className=\"px-4 py-2\">Attendance Timestamp</th>\n//                       <th className=\"px-4 py-2\">Attendance Status</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {attendanceData.filter(record => record.student_id === student.student_id).map(record => (\n//                       <tr key={record.attendance_id} className=\"bg-blue-200\">\n//                         <td className=\"border px-4 py-2\">{new Date(record.attendance_timestamp).toLocaleString()}</td>\n//                         <td className=\"border px-4 py-2\">{record.attendance_status ? 'Present' : 'Absent'}</td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                 </table>\n//               )}\n//             </>\n//           ))}\n//         </div>\n//       </div>\n//     </>\n//   )\n// }\n// export default Dashboard\n\n\n\nreturn (\n  <>\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n      </div>\n      <div className=\"dashboard-body\" style={{ margin: 20 }}>\n        <Calendar\n          onChange={setDate}\n          value={date}\n          firstDayOfWeek={0}\n          tileContent={({ date, view }) => {/* ...existing code... */ }}\n        />\n\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n          <button onClick={startPrediction} className=\"btn btn-primary btn-lg\" style={{ marginRight: \"40px\" }}>Start Prediction</button>\n          <button onClick={handleSeeStudentData} className=\"btn btn-primary btn-lg\" style={{ marginLeft: \"40px\" }}>See Student Data</button>\n        </div>\n\n        <div className=\"flex flex-wrap justify-around\">\n          {studentsData.map(student => (\n            <div className=\"w-1/2 p-4\">\n              <h2 className=\"text-4xl\">Student Name: {student.student_name}</h2>\n              {attendanceData.filter(record => record.student_id === student.student_id).length > 0 && (\n                <table className=\"table-auto\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-4 py-2\">Attendance Timestamp</th>\n                      <th className=\"px-4 py-2\">Attendance Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {attendanceData.filter(record => record.student_id === student.student_id).map(record => (\n                      <tr key={record.attendance_id} className=\"bg-blue-200\">\n                        <td className=\"border px-4 py-2\">{new Date(record.attendance_timestamp).toLocaleString()}</td>\n                        <td className=\"border px-4 py-2\">{record.attendance_status ? 'Present' : 'Absent'}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  </>\n)\n}\nexport default Dashboard\n\n\n\n\n\n//   return (\n//     <>\n//       <div className=\"dashboard\">\n//         <div className=\"dashboard-header\">\n//           <h3>Welcome to FAS! <br /> It's <strong>{date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true })}</strong></h3>\n//         </div>\n//         <div className=\"dashboard-body\" style={{ margin: 20 }}>\n//           <Calendar\n//             onChange={setDate}\n//             value={date}\n//             firstDayOfWeek={0}\n//             tileContent={({ date, view }) => {/* ...existing code... */ }}\n//           />\n  \n//           <div className=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n//             <button onClick={startPrediction} className=\"btn btn-primary btn-lg\" style={{ marginRight: \"40px\" }}>Start Prediction</button>\n//             <button onClick={handleSeeStudentData} className=\"btn btn-primary btn-lg\" style={{ marginLeft: \"40px\" }}>See Student Data</button>\n//           </div>\n  \n//           {studentsData.map(student => (\n//             <>\n//               <h2>{student.student_name}</h2>\n//               {attendanceData.filter(record => record.student_id === student.student_id).length > 0 && (\n//                 <table>\n//                   <thead>\n//                     <tr>\n//                       <th>Attendance Timestamp</th>\n//                       <th>Attendance Status</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {attendanceData.filter(record => record.student_id === student.student_id).map(record => (\n//                       <tr key={record.attendance_id}>\n//                         <td>{new Date(record.attendance_timestamp).toLocaleString()}</td>\n//                         <td>{record.attendance_status ? 'Present' : 'Absent'}</td>\n//                       </tr>\n//                     ))}\n//                   </tbody>\n//                 </table>\n//               )}\n//             </>\n//           ))}\n//         </div>\n//       </div>\n//     </>\n//   )\n\n  \n\n// }\n\n// export default Dashboard\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}